<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

<properties>
<title>Authn DB Plugin Installation</title>
</properties>

<body>

	<section name="Installation">

		<subsection name="Compatibility">This authentication
		plugin will work with an ICAT version of 4.9 or greater.</subsection>

		<subsection name="Prerequisites">

		<ul>
			<li>The authn.db distribution: <a
				href="${repoUrl}/org/icatproject/authn.db/${project.version}/authn.db-${project.version}-distro.zip">authn.db-${project.version}-distro.zip</a>
			</li>
			<li>A suitable deployed application server that supports JakartaEE 10+. Testing has been carried out with Payara Server Community 6. Other applications servers such as GlassFish and WildFly may work but have not been tested.
				<a href="http://icatproject.org/installation/glassfish/">Glassfish/Payara installation instructions</a> are available.
			</li>
			<li>A database as described in <a
				href="http://icatproject.org/installation/database">Database
					installation instructions</a> installed on the server or accessible
				from it.
			</li>

			<li>Python 3.6+ installed on the server.</li>
		</ul>
		</subsection>

		<subsection name="Summary of steps">
		<ol>
			<li>Please follow <a
				href="http://icatproject.org/installation/component/"> the
					generic installation instructions</a>
			</li>
			<li>Update the run.properties file if necessary for the icat.server to see
				the authenticator and restart icat to see the change. The easiest
				way is to rerun the setup script for the icat.server. <em>Remember
					that restful authenticators are identified by url rather than jndi.</em>
			</li>
			<li>Add users</li>
			<li>Check that it works.</li>
		</ol>
		</subsection>

		<subsection name="The setup.properties file">

		<dl>
			<dt>container</dt>
			<dd>May be either Glassfish or JBoss - though only glassfish is
				working fully at the moment.</dd>
			<dt>home</dt>
			<dd>is the top level of the container installation. For
				glasssfish it must contain "glassfish/domains" and for wildfly it
				must contain jboss-modules.jar.</dd>
			<dt>port</dt>
			<dd>is the administration port of the container which is
				typically 4848 for glassfish and 9990 for wildfly.</dd>
			<dt>secure</dt>
			<dd>must be set to true or false. If true then only https and
				not http connections will be allowed.</dd>
			<dt>db.target</dt>
			<dd>
				This is optional and may be used to control the SQL generated by the
				JPA. Values must be chosen from: <a
					href="http://www.eclipse.org/eclipselink/api/2.6/org/eclipse/persistence/config/TargetDatabase.html">TargetDatabase</a>
			</dd>
			<dt>db.driver</dt>
			<dd>is the name of the jdbc driver and must match the jar file
				for your database that you stored in the previous step.</dd>
			<dt>db.url</dt>
			<dd>url to connect to your database. For example:
				jdbc:mysql://localhost:3306/icat</dd>
			<dt>db.username</dt>
			<dd>username to connect to your database.</dd>
			<dt>db.password</dt>
			<dd>password to connect to your database.</dd>
		</dl>

		</subsection>


		<subsection name="The run.properties file">

		<dl>
			<dt>ip</dt>
			<dd>If access to the DB authentication should only be allowed
				from certain IP addresses then provide a space separated list of
				allowed values. These take the form of an IPV4 or IPV6 address
				followed by the number of bits (starting from the most significant)
				to consider.</dd>

			<dt>mechanism</dt>
			<dd>if specified is a label to appear before the user name as it
				is made available to the icat.server for authorization. For example
				if this is set to 'db' then the user 'root' will be provided to ICAT
				as 'db/root', but of no mechanism is specified it will be provided
				simply as 'root'.</dd>
		</dl>

		</subsection>

		<subsection name="Update the run.properties file for your ICAT">
		<p>This is required for the icat.server to see a new
			authenticator. If you are just updating an existing restful
			authenticator then the run.properties of the icat.server will not
			need changing.</p>
		<p>
			Assuming that you still have the installation directory for
			icat.server then edit the run.properties to refer to the new
			authenticator and type:
			<kbd>./setup install</kbd>
		</p>

		</subsection>

		<subsection name="Add users">Users should be added by
		manually adding them to the database table PASSWD. This has two
		columns, one for the username and one for the password. The password
		may be entered as clear text without a leading &quot;$&quot; or a
		cryptographic hash of a password may be stored. A password hash must
		start with a &quot;$&quot; character and be in the same form as found
		in the shadow(5) password file. It may be created using the
		mkpasswd(1) utility on Debian systems or grub-crypt on Red Hat derived
		systems or the python crypt module. The supported hash algorithms are
		MD5, SHA-256, and SHA-512. </subsection>

		<subsection name="Check that authn.db works">
		<p>Use testicat (which is installed with ICAT) with one of the
			entries in the database PASSWD table. It should report that it logs
			in but may or may not have the permission to run the rest of the
			test. If it does not report that it has logged in then please check
			the server.log and the authn_db.log files which can both be found in
			the logs directory below your domain.</p>
		</subsection>

	</section>
</body>
</document>
